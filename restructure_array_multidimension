import java.util.Scanner;

object Test {
    // Read user input, output
    def main(args: Array[String]) {

 val scanner = new Scanner(System.in)

    val a = scanner.nextLine()
    val some = scanner.nextLine()
    
    val x = some.split(" ")(0)
val y = some.split(" ")(1)

println(s"$x and $y")

println(s"$a")
println(s"$some")
}
}


abcda

4



var h = 0

def run( str : String) : Unit = {
var counts = new scala.collection.mutable.HashMap[Char,Int].withDefaultValue(0)

for(i <- 0 until  str.length) {
var l = str.charAt(i)

if(!counts.contains(l))
{
counts.put(l,1)
}
}

val dist_values = counts.size

counts.clear

for(i <- h until  str.length) {
var l = str.charAt(i)

if(!counts.contains(l))
{
counts.put(l,1)

if(counts.size == dist_values){
	
	val subs = str.substring(h,i)
	println(s"$h")
	println(s"the one with distinct values with smallest substring is $subs and length is $dist_values")
}

}else
{

counts.put(l,counts.get(l).get+1)

counts.map({case (x,y) => if(y>1) counts.clear})
h+=1

}
}
}



// main method in "Solution" will be run as your answer

import java.util.Scanner;
object Solution {

    def main(args: Array[String]) {
        //Enter your code here. Read input from STDIN. Print output to STDOUT

        val scanner = new Scanner(System.in)

    val a = scanner.nextLine()
    val some = scanner.nextLine()
    
    val rows = 3
    val cols = some(0).toInt
    val someArray = Array.ofDim[String](rows, cols)

    val elements = some.split(" ")

for (i <- 1 until elements.length)

for {}
        i <- 0 until rows
        j <- 0 until cols
        k <- 1 until elements.length
      }{
someArray(i)(j) = elemnets(k)
      
      }



val y = some.split(" ")(1)

println(s"$cols")
println(s"$elemnets")
//println(s"$x")
}
}
